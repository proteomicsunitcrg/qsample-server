version: "3.9"
services:
  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      # Where starting dumps are stored
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # Where data will be stored
      - ./mysql:/var/lib/mysql
      # Custom conf for MySQL server
      - ./custom.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf # config mysql server
    expose:
      - 3306
    ports:
      # Mapping here for testing purposes
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: qsample2022
      MYSQL_USER: qsample
      MYSQL_PASSWORD: qsample2017
      MYSQL_DATABASE: qsample
      UID: 1000
      GID: 1000
    # More details in the documentation
    # User to run database, act UID and GID accordingly thanks to 'uid -u' and 'uid -g'
    # user: "${UID}:${GID}"
    networks:
      qsample:
        aliases:
          - database
    # Below, compatible with depends in new docker compose versions (starting from 3.9)
    # Situation: https://stackoverflow.com/questions/71060072/docker-compose-depends-on-with-condition-invalid-type-should-be-an-array
    # healthcheck:
    #     test: ["CMD-SHELL", "mysql -h localhost -u root -p$${MYSQL_ROOT_PASSWORD} $${MYSQL_DATABASE} -e 'SELECT COUNT(*) FROM user limit 1;' || exit 1" ]
    #     interval: 90s
    #     timeout: 40s
    #     retries: 20
  app:
    # image: qsample:latest
    build: 
      dockerfile: Dockerfile.dev
      context: .
      args:
        QSAMPLE_API_PREFIX: http://localhost:8099/ #TODO: to be replaced with a fully running time system
    restart: always
    volumes:
      - type: bind
        source: ./src/main/resources/application.dev.yml
        target: /config/application.yml
        read_only: true
      - ./tmp:/tmp
        
    environment:
      QSAMPLE_API_PREFIX: http://localhost:8099/ #Adapt for the final URL to be used
      UID: 1000
      GID: 1000
    # More details in the documentation
    # user: "${UID}:${GID}"
    depends_on:
      - db
      # db:
      #  condition: service_healthy
    ports:
      # Ports exposed outside, they should match config
      - 8099:8099
    networks:
      qsample:
        aliases:
          - qsample

networks:
  qsample:
